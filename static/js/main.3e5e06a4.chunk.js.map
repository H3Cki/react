{"version":3,"sources":["hooks/index.ts","store/slices/reservationSlice.ts","components/Reservation.tsx","components/Seat.tsx","components/SeatGrid.tsx","components/SeatDescription.tsx","components/SeatView.tsx","components/Summary.tsx","App.tsx","store/index.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","fetchSeats","createAsyncThunk","a","fetch","response","json","reservationSlice","createSlice","name","initialState","currStep","seats","adjacent","nSelectedSeats","maxEmptySeats","selectedSeats","reducers","setSuggestedSeats","state","caseReducers","deselectAllSeats","alert","seatsToToggle","prev","seat","cords","y","x","reserved","push","id","length","toggleSeats","type","payload","nextStep","prevStep","setNumberOfSeats","action","toggleAdjacent","selected","seatIds","filter","includes","_seat","extraReducers","builder","addCase","pending","fulfilled","map","rejected","actions","selectNSeats","reservation","selectAdjacent","selectSeats","selectSelectedSeats","selectCurrStep","selectActualNSeats","allSeatsSelected","Wrapper","styled","div","Window","Half","Column","Input","AntInput","Reservation","nSeats","dispatch","console","log","className","value","onChange","e","Number","target","isNaN","handleNSeatsChange","checked","onClick","StyledSeat","css","Seat","onMouseDown","onHover","onMouseEnter","Grid","nCols","nRows","gap","SeatSlot","TutorialIcon","TutorialWrapper","Tutorial","SeatGrid","useState","hoverSelect","setHoverSelect","allSeats","dimensions","useMemo","_rows","_cols","rows","cols","calculateGridDim","onDragStart","preventDefault","onMouseUp","onMouseLeave","i","seatExamples","SeatExampleWrapper","SeatExampleContainer","SeatInfoContainer","SeatDescription","seatExample","Info","SeatDescriptionWrapper","ControlPanelWrapper","Hr","hr","NSeatsIndicator","SeatView","useEffect","Text","props","bold","Summary","App","store","configureStore","reducer","reservationReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e5e06a4.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from '../store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../index\";\r\n\r\nexport interface ICoordinates {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface ISeatExample {\r\n  name: string;\r\n  reserved: boolean;\r\n  selected: boolean;\r\n}\r\n\r\nexport interface IBareSeat {\r\n  id: string;\r\n  cords: ICoordinates;\r\n  reserved: boolean;\r\n}\r\n\r\nexport interface ISeat extends IBareSeat {\r\n  selected: boolean;\r\n}\r\n\r\nexport interface ReservationState {\r\n  currStep: number;\r\n  seats: Array<ISeat>;\r\n  adjacent: boolean;\r\n  nSelectedSeats: number;\r\n  maxEmptySeats: number;\r\n  selectedSeats: Array<ISeat>;\r\n}\r\n\r\nconst initialState: ReservationState = {\r\n  currStep: 0,\r\n  seats: [],\r\n  adjacent: false,\r\n  nSelectedSeats: 0,\r\n  maxEmptySeats: 0,\r\n  selectedSeats: [],\r\n};\r\n\r\nexport const fetchSeats = createAsyncThunk(\"users/fetchSeats\", async () => {\r\n  const response = await fetch(\"http://localhost:3001/seats\");\r\n  return response.json();\r\n});\r\n\r\nexport const reservationSlice = createSlice({\r\n  name: \"reservation\",\r\n  initialState,\r\n  reducers: {\r\n    setSuggestedSeats(state) {\r\n      reservationSlice.caseReducers.deselectAllSeats(state);\r\n      if (state.nSelectedSeats > state.maxEmptySeats) {\r\n        alert(\r\n          `Wybrano ${state.nSelectedSeats} miejsc, na tej sali wolnych miejsc jest ${state.maxEmptySeats}.`\r\n        );\r\n        return;\r\n      }\r\n\r\n      let seatsToToggle: String[] = [];\r\n      let prev = null;\r\n\r\n      for (const seat of state.seats) {\r\n        if (prev && state.adjacent) {\r\n          if (\r\n            prev.cords.y !== seat.cords.y - 1 ||\r\n            prev.cords.x !== seat.cords.x ||\r\n            seat.reserved\r\n          ) {\r\n            seatsToToggle = [];\r\n          }\r\n        }\r\n\r\n        if (!seat.reserved) seatsToToggle.push(seat.id);\r\n\r\n        prev = seat;\r\n\r\n        if (seatsToToggle.length === state.nSelectedSeats) {\r\n          reservationSlice.caseReducers.toggleSeats(state, {\r\n            type: \"suggested/toggle\",\r\n            payload: seatsToToggle,\r\n          });\r\n          return;\r\n        }\r\n      }\r\n\r\n      alert(\r\n        `Nie udało się wybrać ${state.nSelectedSeats} ${\r\n          state.adjacent ? \"sąsiadujących \" : \"\"\r\n        }miejsc.`\r\n      );\r\n    },\r\n    nextStep(state) {\r\n      state.currStep += 1;\r\n      prevStep();\r\n    },\r\n    prevStep(state) {\r\n      state.currStep -= 1;\r\n    },\r\n    setNumberOfSeats: (state, action: PayloadAction<number>) => {\r\n      state.nSelectedSeats = action.payload;\r\n    },\r\n    toggleAdjacent: (state, action: PayloadAction<boolean | undefined>) => {\r\n      action.payload\r\n        ? (state.adjacent = action.payload)\r\n        : (state.adjacent = !state.adjacent);\r\n    },\r\n    deselectAllSeats(state) {\r\n      for (const seat of state.selectedSeats) {\r\n        seat.selected = false;\r\n      }\r\n      state.selectedSeats = [];\r\n    },\r\n    toggleSeats: (state, action: PayloadAction<Array<String>>) => {\r\n      const seatIds = action.payload;\r\n\r\n      const seatsToToggle = state.seats.filter((seat) =>\r\n        seatIds.includes(seat.id)\r\n      );\r\n\r\n      for (const seat of seatsToToggle) {\r\n        //add or remove seats from selected\r\n\r\n        if (seat.reserved) {\r\n          alert(\"Miejsce jest już zarezerwowane.\");\r\n          return;\r\n        }\r\n\r\n        if (seat.selected) {\r\n          state.selectedSeats = state.selectedSeats.filter(\r\n            (_seat) => _seat.id !== seat.id\r\n          );\r\n          seat.selected = false;\r\n        } else {\r\n          if (state.selectedSeats.length >= state.nSelectedSeats) {\r\n            alert(\"Limit miejsc osiągnięty.\");\r\n            return;\r\n          }\r\n          state.selectedSeats.push(seat);\r\n          seat.selected = true;\r\n        }\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchSeats.pending, () => {});\r\n\r\n    builder.addCase(fetchSeats.fulfilled, (state, action) => {\r\n      state.maxEmptySeats = 0;\r\n      state.seats = action.payload.map((seat: IBareSeat) => {\r\n        if (!seat.reserved) state.maxEmptySeats += 1;\r\n        return { ...seat, selected: false };\r\n      });\r\n\r\n      //advance to next step\r\n      reservationSlice.caseReducers.nextStep(state);\r\n    });\r\n\r\n    builder.addCase(fetchSeats.rejected, (state, action) => {\r\n      alert(\"Błąd Połączenia z serwerem.\");\r\n    });\r\n  },\r\n});\r\n\r\n/// Exports\r\n\r\nexport const {\r\n  toggleAdjacent,\r\n  toggleSeats,\r\n  setNumberOfSeats,\r\n  nextStep,\r\n  prevStep,\r\n  setSuggestedSeats,\r\n} = reservationSlice.actions;\r\n\r\nexport const selectNSeats = (state: RootState) =>\r\n  state.reservation.nSelectedSeats;\r\nexport const selectAdjacent = (state: RootState) => state.reservation.adjacent;\r\nexport const selectSeats = (state: RootState) => state.reservation.seats;\r\nexport const selectSelectedSeats = (state: RootState) =>\r\n  state.reservation.selectedSeats;\r\nexport const selectCurrStep = (state: RootState) => state.reservation.currStep;\r\nexport const selectActualNSeats = (state: RootState) =>\r\n  state.reservation.nSelectedSeats <= state.reservation.maxEmptySeats\r\n    ? state.reservation.nSelectedSeats\r\n    : state.reservation.maxEmptySeats;\r\nexport const allSeatsSelected = (state: RootState) =>\r\n  state.reservation.selectedSeats.length === selectActualNSeats(state);\r\n\r\nexport default reservationSlice.reducer;\r\n","import React from \"react\";\r\nimport { useAppSelector, useAppDispatch } from \"../hooks\";\r\nimport { Button, Input as AntInput, Checkbox } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  fetchSeats,\r\n  toggleAdjacent,\r\n  setNumberOfSeats,\r\n  selectNSeats,\r\n  selectAdjacent,\r\n} from \"../store/slices/reservationSlice\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100vh;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Window = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  right: 50%;\r\n  transform: translate(50%, -50%);\r\n  border-radius: 5px;\r\n  background: white;\r\n  padding: 20px;\r\n  width: 300px;\r\n\r\n  .field:not(:first-child) {\r\n    margin-top: 20px;\r\n  }\r\n\r\n  box-shadow: 0px 0px 8px 1px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst Half = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Column = styled.div`\r\n  width: 50%;\r\n`;\r\n\r\nconst Input = styled(AntInput)`\r\n  text-align: right;\r\n`;\r\n\r\nconst Reservation: React.FC = () => {\r\n  const nSeats = useAppSelector(selectNSeats);\r\n  const adjacent = useAppSelector(selectAdjacent);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleNSeatsChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = Number(e.target.value);\r\n    if (isNaN(value)) {\r\n      alert(\"BAD\");\r\n    } else {\r\n      dispatch(setNumberOfSeats(value));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (nSeats < 1) {\r\n      alert(\"Wybierz przynajmniej jedno miejsce\");\r\n      return;\r\n    }\r\n    dispatch(fetchSeats());\r\n  };\r\n\r\n  console.log(adjacent);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Window>\r\n        <div className=\"field\">\r\n          <Half>\r\n            <Column>\r\n              <span>Liczba miejsc:</span>\r\n            </Column>\r\n\r\n            <Column>\r\n              <Input\r\n                value={nSeats > 0 ? nSeats : \"\"}\r\n                onChange={(e) => handleNSeatsChange(e)}\r\n              />\r\n            </Column>\r\n          </Half>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <Checkbox\r\n            checked={adjacent}\r\n            onChange={(e) => dispatch(toggleAdjacent(e.target.checked))}\r\n          >\r\n            Czy miejsca mają być obok siebie?\r\n          </Checkbox>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <Half>\r\n            <Column />\r\n            <Column>\r\n              <Button type=\"primary\" onClick={(e) => handleSubmit()}>\r\n                Wybierz miejsca\r\n              </Button>\r\n            </Column>\r\n          </Half>\r\n        </div>\r\n      </Window>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Reservation;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ISeat, ISeatExample } from \"../store/slices/reservationSlice\";\r\n\r\ninterface Props {\r\n  seat: ISeat | ISeatExample;\r\n  onMouseDown?: () => void;\r\n  onHover?: () => void;\r\n}\r\n\r\nconst StyledSeat = styled(\"div\")<{ seat: ISeat | ISeatExample }>`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 1px;\r\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 1);\r\n  background-color: white;\r\n  transition: background 0.25s ease;\r\n  pointer-events: all;\r\n  ${({ seat }) => {\r\n    if (seat.reserved) {\r\n      return css`\r\n        background: gray;\r\n      `;\r\n    } else if (seat.selected) {\r\n      return css`\r\n        background: orange;\r\n        box-shadow: 0px 0px 0px 1px orange;\r\n      `;\r\n    }\r\n  }};\r\n`;\r\n\r\nconst Seat = ({ seat, onMouseDown, onHover }: Props) => {\r\n  return (\r\n    <StyledSeat\r\n      seat={seat}\r\n      onMouseEnter={() => {\r\n        if (onHover) onHover();\r\n      }}\r\n      onMouseDown={() => {\r\n        if (onMouseDown) onMouseDown();\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Seat;\r\n","import React, { useMemo, useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../hooks\";\r\nimport {\r\n  toggleSeats,\r\n  selectSeats,\r\n  allSeatsSelected,\r\n  ISeat,\r\n} from \"../store/slices/reservationSlice\";\r\nimport Seat from \"./Seat\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst Grid = styled(\"div\")<{ nRows: number; nCols: number; gap: number }>`\r\n  display: grid;\r\n  grid-template-columns: ${({ nCols }) => `repeat(${nCols}, 1fr)`};\r\n  grid-template-rows: ${({ nRows }) => `repeat(${nRows}, 1fr)`};\r\n  grid-column-gap: ${({ gap }) => `${gap}px`};\r\n  grid-row-gap: ${({ gap }) => `${gap}px`};\r\n`;\r\n\r\nconst SeatSlot = styled(\"div\")<{ x: number; y: number }>`\r\n  width: 50px;\r\n  height: 50px;\r\n  grid-column: ${({ y }) => y};\r\n  grid-row: ${({ x }) => x};\r\n`;\r\n\r\nconst TutorialIcon = styled(\"div\")`\r\n  pointer-events: all;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  color: gray;\r\n  cursor: default;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  box-shadow: 0px 0px 3px 1px gray;\r\n`;\r\n\r\nconst TutorialWrapper = styled.div`\r\n  width: 100%;\r\n  position: absolute;\r\n  display: flex;\r\n  padding: 5px;\r\n  pointer-events: none;\r\n\r\n  #tutorial-icon:hover + #tutorial {\r\n    display: inline-block;\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst Tutorial = styled.div`\r\n  display: none;\r\n  transition: opacity 0.15s ease;\r\n  margin-left: 5px;\r\n  width: 100%;\r\n  background: #53ca7b;\r\n  opacity: 0;\r\n  text-align: center;\r\n  pointer-events: None;\r\n  border-radius: 5px;\r\n`;\r\n\r\nfunction calculateGridDim(seats: ISeat[]) {\r\n  let _rows = 0;\r\n  let _cols = 0;\r\n\r\n  for (const seat of seats) {\r\n    if (seat.cords.x > _rows) _rows = seat.cords.x;\r\n    if (seat.cords.y > _cols) _cols = seat.cords.y;\r\n  }\r\n\r\n  return {\r\n    rows: _rows,\r\n    cols: _cols,\r\n  };\r\n}\r\n\r\nconst tutorialText =\r\n  \"Kliknij aby wybrać miejsce, kliknij i przeciąg aby zaznaczyć wiele na raz.\";\r\n\r\nconst SeatGrid = () => {\r\n  const [hoverSelect, setHoverSelect] = useState(false);\r\n  const dispatch = useAppDispatch();\r\n  const seats = useAppSelector(selectSeats);\r\n  const allSeats = useAppSelector(allSeatsSelected);\r\n\r\n  const dimensions = useMemo(() => calculateGridDim(seats), [seats]);\r\n\r\n  if (!seats.length) return <div>No seats found!</div>;\r\n\r\n  return (\r\n    <div\r\n      onDragStart={(e) => e.preventDefault()}\r\n      onMouseDown={() => setHoverSelect(true)}\r\n      onMouseUp={() => setHoverSelect(false)}\r\n      onMouseLeave={() => setHoverSelect(false)}\r\n    >\r\n      <TutorialWrapper>\r\n        <TutorialIcon id=\"tutorial-icon\"> ? </TutorialIcon>\r\n        <Tutorial id=\"tutorial\">{tutorialText}</Tutorial>\r\n      </TutorialWrapper>\r\n      <Grid nRows={dimensions.rows} nCols={dimensions.cols} gap={10}>\r\n        {seats.map((seat, i) => {\r\n          return (\r\n            <SeatSlot\r\n              key={\"slot\" + i}\r\n              x={seat.cords.x + 1}\r\n              y={seat.cords.y + 1}\r\n            >\r\n              <Seat\r\n                key={i}\r\n                seat={seat}\r\n                onHover={() => {\r\n                  if (hoverSelect && !seat.reserved && !allSeats)\r\n                    dispatch(toggleSeats([seat.id]));\r\n                }}\r\n                onMouseDown={() => {\r\n                  dispatch(toggleSeats([seat.id]));\r\n                }}\r\n              />\r\n            </SeatSlot>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeatGrid;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ISeatExample } from \"../store/slices/reservationSlice\";\r\nimport Seat from \"./Seat\";\r\n\r\nconst seatExamples: ISeatExample[] = [\r\n  {\r\n    name: \"Wolne miejsce\",\r\n    reserved: false,\r\n    selected: false,\r\n  },\r\n  {\r\n    name: \"Wybrane miejsce\",\r\n    reserved: false,\r\n    selected: true,\r\n  },\r\n  {\r\n    name: \"Zajęte miejsce\",\r\n    reserved: true,\r\n    selected: false,\r\n  },\r\n];\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst SeatExampleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 30%;\r\n`;\r\n\r\nconst SeatExampleContainer = styled.div`\r\n  width: 25px;\r\n  height: 25px;\r\n`;\r\n\r\nconst SeatInfoContainer = styled.div`\r\n  padding-left: 20px;\r\n`;\r\n\r\nconst SeatDescription = () => {\r\n  return (\r\n    <Wrapper>\r\n      {seatExamples.map((seatExample, i) => {\r\n        return (\r\n          <SeatExampleWrapper>\r\n            <SeatExampleContainer>\r\n              <Seat key={i} seat={seatExample} />\r\n            </SeatExampleContainer>\r\n\r\n            <SeatInfoContainer>{seatExample.name}</SeatInfoContainer>\r\n          </SeatExampleWrapper>\r\n        );\r\n      })}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SeatDescription;\r\n","import React, { useEffect } from \"react\";\r\nimport { useAppSelector, useAppDispatch } from \"../hooks\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { Button } from \"antd\";\r\nimport SeatGrid from \"./SeatGrid\";\r\nimport {\r\n  prevStep,\r\n  nextStep,\r\n  selectSelectedSeats,\r\n  setSuggestedSeats,\r\n  selectActualNSeats,\r\n} from \"../store/slices/reservationSlice\";\r\nimport SeatDescription from \"./SeatDescription\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 50%;\r\n  transform: translate(50%, -50%);\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 0px 8px 1px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst Info = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst SeatDescriptionWrapper = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst ControlPanelWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst Hr = styled.hr`\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n  width: 80%;\r\n  border: none;\r\n  border-top: 1px solid gray;\r\n`;\r\n\r\nconst NSeatsIndicator = styled(\"span\")<{\r\n  selected: number;\r\n  target: number;\r\n}>`\r\n  margin-left: 10px;\r\n  padding: 0px 5px 0px 5px;\r\n  border-radius: 3px;\r\n  background: gray;\r\n  color: white;\r\n  font-weight: bold;\r\n  ${({ selected, target }) =>\r\n    selected > 0 &&\r\n    selected < target &&\r\n    css`\r\n      background: orange;\r\n    `}\r\n  ${({ selected, target }) =>\r\n    selected > 0 &&\r\n    selected === target &&\r\n    css`\r\n      background: #36ca4a;\r\n    `}\r\n`;\r\n\r\nconst SeatView = () => {\r\n  const dispatch = useAppDispatch();\r\n  const selectedSeats = useAppSelector(selectSelectedSeats);\r\n  const nSeats = useAppSelector(selectActualNSeats);\r\n\r\n  const handleSubmit = () => {\r\n    if (selectedSeats.length !== nSeats) {\r\n      alert(`Wybierz ${nSeats} miejsca zanim zatwierdzisz wybór.`);\r\n      return;\r\n    }\r\n    dispatch(nextStep());\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(setSuggestedSeats());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <SeatGrid />\r\n      <SeatDescriptionWrapper>\r\n        <SeatDescription />\r\n      </SeatDescriptionWrapper>\r\n      <Hr />\r\n      <ControlPanelWrapper>\r\n        <Button\r\n          onClick={() => {\r\n            dispatch(prevStep());\r\n          }}\r\n        >\r\n          Powrót\r\n        </Button>\r\n\r\n        <Info>\r\n          Wybrano miejsca:{\" \"}\r\n          <NSeatsIndicator\r\n            selected={selectedSeats.length}\r\n            target={nSeats}\r\n          >{`${selectedSeats.length}/${nSeats}`}</NSeatsIndicator>\r\n        </Info>\r\n\r\n        <Button type=\"primary\" onClick={handleSubmit}>\r\n          Zatwierdź miejsca\r\n        </Button>\r\n      </ControlPanelWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SeatView;\r\n","import React from \"react\";\r\nimport { useAppSelector } from \"../hooks\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ISeat, selectSelectedSeats } from \"../store/slices/reservationSlice\";\r\n\r\nconst Text = styled(\"p\")<{ bold?: boolean }>`\r\n  ${(props) =>\r\n    props.bold &&\r\n    css`\r\n      font-weight: bold;\r\n    `}\r\n`;\r\n\r\nconst Window = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  right: 50%;\r\n  transform: translate(50%, -50%);\r\n  border-radius: 5px;\r\n  background: white;\r\n  padding: 20px;\r\n  width: 600px;\r\n  .field:not(:first-child) {\r\n    margin-top: 20px;\r\n  }\r\n\r\n  box-shadow: 0px 0px 8px 1px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst Summary = () => {\r\n  const selectedSeats = useAppSelector(selectSelectedSeats);\r\n  return (\r\n    <Window>\r\n      <Text bold>Twoja rezerwacja przebiegła pomyślnie!</Text>\r\n      <Text>\r\n        Wybrałeś miejsca:\r\n        {selectedSeats.map((seat: ISeat) => (\r\n          <div>\r\n            {`- rząd x${seat.cords.x + 1}, miejsce y${seat.cords.y + 1} (${\r\n              seat.id\r\n            })`}\r\n          </div>\r\n        ))}\r\n      </Text>\r\n\r\n      <Text bold>\r\n        Dziękujemy! W razie problemów prosimy o kontakt z działem administracji\r\n      </Text>\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n","import React from \"react\";\r\nimport Reservation from \"./components/Reservation\";\r\nimport SeatView from \"./components/SeatView\";\r\nimport Summary from \"./components/Summary\";\r\nimport { selectCurrStep} from \"./store/slices/reservationSlice\";\r\nimport { useAppSelector } from \"./hooks\";\r\n\r\nconst App: React.FC = () => {\r\n  const currStep = useAppSelector(selectCurrStep);\r\n\r\n  switch (currStep) {\r\n    default:\r\n      return (\r\n        <Reservation/>\r\n      );\r\n    case 0:\r\n      return (\r\n        <Reservation/>\r\n      );\r\n    case 1:\r\n      return (\r\n        <SeatView/>\r\n      );\r\n    case 2:\r\n      return (\r\n        <Summary/>\r\n      );\r\n  }\r\n};\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport reservationReducer from './slices/reservationSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    reservation: reservationReducer,\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}